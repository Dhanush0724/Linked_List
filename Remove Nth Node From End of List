# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        
        # dummy = ListNode(-1)
        # dummy.next = head
        
        # temp = head
        # count = 0
        # while temp :
        #     count+=1
        #     temp = temp.next
        # k = count-n
        # curr = dummy
        # for _ in range(k):
        #     curr = curr.next
        
        # curr.next = curr.next.next if curr.next else None

        # return dummy.next

        dummy = ListNode(-1)
        dummy.next = head

        slow = dummy
        fast = dummy

        for _ in range(n):
            fast = fast.next

        while fast.next:
            slow = slow.next
            fast = fast.next
        
        slow.next = slow.next.next

        return dummy.next
